<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Medicine Reminder</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f3e6f9; /* Subtle Purple Background */
            margin: 0;
            padding: 0;
            color: #4b0082;
        }
        .container {
            max-width: 600px;
            margin: 20px auto;
            background: #f9f0ff; /* Light Purple */
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h1 {
            text-align: center;
            color: #4b0082;
            font-size: 1.8rem;
            font-weight: 600;
        }
        input, select, button {
            display: block;
            width: 100%;
            margin-bottom: 15px;
            padding: 10px;
            font-size: 1rem;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        button {
            background-color: #6a0dad;
            color: white;
            font-weight: bold;
            cursor: pointer;
        }
        .medicine-item {
            background: #f4eaff;
            margin-bottom: 10px;
            padding: 15px;
            border-radius: 5px;
        }
        .delete {
            background-color: #8b0000;
            color: white;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Medicine Reminder</h1>

        <!-- Step 1: Enter number of medicines -->
        <div id="step1">
            <input type="number" id="medicineCount" placeholder="How many medicines?" min="1" required>
            <button onclick="generateMedicineFields()">Next</button>
        </div>

        <!-- Step 2: Input Medicine Details -->
        <form id="medicineForm" style="display:none;">
            <div id="medicineInputs"></div>
            <button type="submit">Set Reminders</button>
        </form>

        <!-- Medicine List -->
        <div id="medicineList"></div>
    </div>

    <script>
        const medicineInputs = document.getElementById('medicineInputs');
        const medicineForm = document.getElementById('medicineForm');
        const medicineList = document.getElementById('medicineList');
        let medicines = [];

        // Generate fields based on medicine count
        function generateMedicineFields() {
            const count = parseInt(document.getElementById('medicineCount').value);
            if (count < 1) return;

            medicineInputs.innerHTML = '';
            for (let i = 1; i <= count; i++) {
                const div = document.createElement('div');
                div.innerHTML = `
                    <h3>Medicine ${i}</h3>
                    <input type="text" class="name" placeholder="Medicine Name" required>
                    <select class="lifelong">
                        <option value="no">Regular</option>
                        <option value="yes">Lifelong</option>
                    </select>
                    <input type="number" class="days" placeholder="Number of Days" min="1" required>
                    <input type="number" class="times" placeholder="Times Per Day" min="1" required>
                    <div class="timeSlots"></div>
                `;
                medicineInputs.appendChild(div);

                const timesInput = div.querySelector('.times');
                timesInput.addEventListener('input', (e) => {
                    const timeSlotDiv = div.querySelector('.timeSlots');
                    timeSlotDiv.innerHTML = '';
                    for (let j = 1; j <= e.target.value; j++) {
                        const timeInput = document.createElement('input');
                        timeInput.type = 'time';
                        timeInput.className = 'time';
                        timeInput.required = true;
                        timeSlotDiv.appendChild(timeInput);
                    }
                });
            }
            document.getElementById('step1').style.display = 'none';
            medicineForm.style.display = 'block';
        }

        // Add Medicines and Schedule Notifications
        medicineForm.addEventListener('submit', (e) => {
            e.preventDefault();
            medicines = [];
            const medicineEntries = document.querySelectorAll('#medicineInputs > div');
            medicineEntries.forEach(entry => {
                const name = entry.querySelector('.name').value;
                const lifelong = entry.querySelector('.lifelong').value === 'yes';
                const days = lifelong ? Infinity : parseInt(entry.querySelector('.days').value);
                const times = Array.from(entry.querySelectorAll('.time')).map(input => input.value);

                medicines.push({ name, days, times });
            });

            displayMedicines();
            scheduleNotifications();
            medicineForm.reset();
        });

        // Display Medicines
        function displayMedicines() {
            medicineList.innerHTML = '';
            medicines.forEach((med, index) => {
                const div = document.createElement('div');
                div.classList.add('medicine-item');
                div.innerHTML = `
                    <h3>${med.name}</h3>
                    <p>${med.days === Infinity ? 'Lifelong' : `Days: ${med.days}`}</p>
                    <p>Times: ${med.times.join(', ')}</p>
                    <button class="delete" onclick="deleteMedicine(${index})">Delete</button>
                `;
                medicineList.appendChild(div);
            });
        }

        // Delete Medicine
        function deleteMedicine(index) {
            medicines.splice(index, 1);
            displayMedicines();
        }

        // Schedule Notifications
        function scheduleNotifications() {
            medicines.forEach(medicine => {
                medicine.times.forEach(time => {
                    const [hours, minutes] = time.split(':').map(Number);
                    const now = new Date();
                    const notifTime = new Date();
                    notifTime.setHours(hours, minutes, 0);

                    if (notifTime < now) notifTime.setDate(now.getDate() + 1);

                    const timeout = notifTime - now;
                    setTimeout(() => {
                        showNotification(medicine.name);
                    }, timeout);
                });
            });
        }

        // Show Notification
        function showNotification(medicineName) {
            if (Notification.permission === 'granted') {
                new Notification('Medicine Reminder', {
                    body: `Time for your tablet: ${medicineName}`,
                    icon: 'https://cdn-icons-png.flaticon.com/512/2921/2921822.png'
                });
            }
        }

        // Request Notification Permission
        if (Notification.permission !== 'granted') {
            Notification.requestPermission();
        }
    </script>
</body>
</html>
